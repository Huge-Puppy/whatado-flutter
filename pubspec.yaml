name: whatado
description: An app to bring the "social" back into "social media".
publish_to: 'none' # Remove this line if you wish to publish to pub.dev
version: 1.2.1+21

environment:
  sdk: ">=2.12.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  artemis: '^7.0.0-beta.3'
  bubble: ^1.2.1
  build_runner: ^2.0.1
  cupertino_icons: ^1.0.2
  expandable_text: ^2.2.0
  equatable: ^2.0.0
  gql: '>=0.12.3 <1.0.0'
  graphql_flutter: ^5.0.0
  http: ^0.13.1
  hive: ^2.0.4
  hive_flutter: ^1.1.0
  hive_generator: ^1.1.0
  firebase_core: ^1.5.0
  firebase_messaging: ^10.0.8
  firebase_storage: ^10.0.1
  flutter_datetime_picker: ^1.5.1
  flutter_fadein: ^2.0.0
  flutter_local_notifications: ^9.2.0
  flutter_lorem: ^2.0.0
  flutter_native_splash: ^1.2.1 
  flutter_slidable: ^0.6.0
  flutter_typeahead: ^3.2.0
  image: ^3.0.2
  image_crop: ^0.4.0
  image_cropper: ^1.4.1
  image_picker: ^0.8.4
  injector: ^2.0.0
  intl: ^0.17.0
  json_annotation: ^4.0.1
  json_serializable: ^4.1.3
  meta: '>=1.0.0 <2.0.0'
  path_provider: ^2.0.2
  photo_manager: ^1.3.9+1
  photo_view: ^0.12.0
  provider: ^5.0.0
  pull_to_refresh: ^2.0.0
  quiver: ^3.0.1
  shimmer: ^2.0.0
  timeago: ^3.1.0
  web_socket_channel: ^2.1.0
  showcaseview: ^1.1.1
  carousel_slider: ^4.0.0
  intl_phone_number_input: ^0.7.0+2
  keyboard_dismisser: ^2.0.0
  heic_to_jpg: ^0.2.0
  cached_network_image: ^3.2.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_launcher_icons: "^0.9.2"

flutter:
  uses-material-design: true
  assets:
    - assets/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
flutter_icons: 
  android: true
  ios: true
  image_path: "assets/icon.png"
  image_path_android: "assets/icon_android.png"
  adaptive_icon_background: "#f7941d"
  adaptive_icon_foreground: "assets/icon_android.png"

flutter_native_splash:
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#f7941d"
  #background_image: "assets/background.png"
  
  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing 
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a 
  # png file and should be sized for 4x pixel density.
  image: assets/Whatado_White.png

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or 
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png

  # The android, ios and web parameters can be used to disable generating a splash screen on a given 
  # platform.
  #android: false
  #ios: false
  #web: false

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see 
  # https://developer.android.com/reference/android/view/Gravity): bottom, center, 
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see 
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill, 
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight, 
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web 
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true
  
  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s) 
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'

  # To enable support for Android 12, set the following parameter to true.  Defaults to false.
  #android12: true
